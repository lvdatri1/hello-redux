{"version":3,"sources":["logo.svg","components/Money.js","components/Counter.js","actions/index.js","containers/ListFeature.js","containers/ListMoney.js","components/Person.js","components/ListPeople.js","containers/People.js","App.js","serviceWorker.js","reducers/counter.js","reducers/money.js","reducers/people.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Money","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","event","setState","target","_this2","_this$props","amount","amountValue","onDeposit","onWithdraw","onReload","isLoading","react_default","a","createElement","type","onChange","onClick","Component","Counter","onDoubleClick","console","log","onIncrement","onDecrement","host","fetchCounter","dispatch","fetch","then","response","json","data","receiveCounter","counter","catch","error","err","fetchMoney","receiveMoney","money","ListFeature","connect","ListMoney","m","m1","Person","personData","gender","name","first","last","pic","picture","thumbnail","src","ListPeople","people","page","listitems","map","item","index","key","Person_Person","People","hostPeople","receivePeople","results","fetchPeople","App","containers_ListFeature","containers_ListMoney","containers_People","Boolean","window","location","hostname","match","arguments","length","undefined","action","objectSpread","Number","concat","combineReducers","RootReducer","middleware","thunk","push","createLogger","store","createStore","applyMiddleware","apply","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38ae8a32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\n\r\nclass Money extends Component {\r\n   constructor(props){\r\n       super(props);\r\n       this.state = {value: 0};\r\n       this.handleChange = this.handleChange.bind(this);\r\n   }\r\n   componentDidMount(){\r\n    //  this.props.onReload();\r\n   }\r\n   handleChange(event){\r\n       this.setState({value: event.target.value});\r\n   }\r\n    render() {\r\n    const {amount, amountValue, onDeposit, onWithdraw, onReload, isLoading} = this.props;\r\n    const onD = () => onDeposit(this.state.value);\r\n    const onW = () => onWithdraw(this.state.value);\r\n    \r\n    if(isLoading) return <div> loading</div>;    \r\n    return (\r\n\r\n      <div>\r\n          <input type= {'text'} value={this.state.value} onChange={this.handleChange}/> \r\n        Money: {amount} {' '} dollar with Value: {amountValue} times\r\n        <button onClick={onD}>deposit</button>\r\n        <button onClick={onW}>withdraw</button>\r\n        <button onClick={onReload}>Reload</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Money\r\n","import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onDoubleClick = this.onDoubleClick.bind(this);\r\n        \r\n    }\r\n    componentDidMount(){\r\n  //    this.props.onReload();\r\n    }\r\n    onDoubleClick(){\r\nconsole.log(this.props);\r\nthis.props.onIncrement();\r\nthis.props.onIncrement();\r\n    }\r\n  render() {\r\n      const {value, onIncrement, onDecrement, onReload, isLoading}= this.props;\r\n      console.log('step 2 inside render of compoent Counter', this.props);\r\n      console.log('heheh', value);\r\n   if(isLoading) {\r\n     console.log('inside loading',isLoading);\r\n     return (<div> loading</div>)\r\n     }\r\n    return (\r\n      <div>\r\n        value: {value} times {' '} \r\n        <button onClick={onIncrement}>+</button>\r\n        <button onClick={onDecrement}>-</button>\r\n        <button onClick={this.onDoubleClick}> increase 2 times</button>\r\n        <button onClick={onReload}>Reload</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Counter\r\n","const host = 'http://localhost:3000/data';\r\n//const host = 'https://www.reddit.com/r/reactjs.json';\r\n\r\n// const callToGetCounter = () =>{\r\n//     return fetch(host + '/data')\r\n// .then(response=> response.json())\r\n// .then(data => data.counter)\r\n// .catch(error => {console.log(error)});\r\n// }\r\n// export default callToGetCounter;\r\n\r\nexport const requestCounter=()=>\r\n{\r\n    console.log('heelo');\r\n    return {type: 'REQUEST_COUNTER'}\r\n}\r\nexport const fetchCounter = () =>{\r\n  //  console.log(\"inside reload xx\");\r\n    return dispatch =>{\r\n        dispatch(requestCounter());\r\n        return fetch(host)\r\n        .then(response => response.json())\r\n        .then(data => { return dispatch(receiveCounter(data.counter));\r\n\r\n        })\r\n        .catch(error => {console.log('eerrr', error)})\r\n        .catch(err => {console.log('error 2', err)});\r\n    }\r\n}\r\nexport const receiveCounter = (data) =>{\r\n    return {type: 'RECEIVE_COUNTER', value:data}\r\n}\r\nexport const requestMoney=()=>\r\n{\r\n    console.log('Request money');\r\n    return {type: 'REQUEST_MONEY'}\r\n}\r\nexport const fetchMoney = ()=> {\r\n    console.log('request reload money');\r\n    return dispatch =>{\r\n        dispatch(requestMoney());\r\n        return fetch(host)\r\n        .then(response => response.json())\r\n        .then(data => { return dispatch(receiveMoney(data.money));\r\n\r\n        })\r\n        .catch(error => {console.log('eerrr', error)})\r\n        .catch(err => {console.log('error 2', err)});\r\n    }\r\n}\r\nexport const receiveMoney = (data) =>{\r\n    return {type: 'RECEIVE_MONEY', amount:data}\r\n}\r\n\r\n\r\n\r\n// export const requestPeople = () =>{\r\n//     console.log('request people is here');\r\n//     return {\r\n//         type: \"REQUEST_PEOPLE\",\r\n//         }\r\n\r\n// }\r\nexport const requestPeople = () => ({\r\n    type: 'REQUEST_PEOPLE'\r\n  })\r\nexport const receivePeople = (data) =>{\r\n    return {\r\n        type: \"RECEIVE_PEOPLE\",\r\n        people: data\r\n\r\n    }\r\n\r\n}\r\n\r\nconst hostPeople= 'https://randomuser.me/api/?results=10&seed=abc'\r\n\r\n\r\nexport const fetchPeople = (page)=> {\r\n    console.log('request reload fetch people');\r\n    return dispatch =>{\r\n       dispatch(requestPeople());\r\n        console.log('request reload fetch people 2');\r\n\r\n        return fetch(hostPeople + '&page=' + page)\r\n        .then(response => response.json())\r\n        .then(data => { return dispatch(receivePeople(data.results));\r\n\r\n        })\r\n        .catch(error => {console.log('eerrr', error)})\r\n        .catch(err => {console.log('error 2', err)});\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport Counter from '../components/Counter';\r\nimport { fetchCounter } from '../actions'\r\n//import Money from '../components/Money';\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"inside statetoprops\", state);\r\n    return {\r\n        value: state.counter.value,\r\n    isLoading: state.counter.isLoading}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    console.log('click increase');\r\n    return { onIncrement: () =>  dispatch({type: 'INCREMENT'}),\r\n    onDecrement: () =>  dispatch({type: 'DECREMENT'}),\r\n    onReload: ()=> dispatch(fetchCounter())\r\n\r\n    }\r\n}\r\n\r\nconst ListFeature = connect(mapStateToProps, mapDispatchToProps)(Counter);\r\nexport default ListFeature;\r\n","import { connect } from 'react-redux';\r\nimport Money from '../components/Money';\r\nimport { fetchMoney } from '../actions';\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        amount: state.money.amount,\r\n        amountValue: state.counter.value,\r\n        isLoading: state.money.isLoading\r\n    }\r\n}\r\nconst MapDispatchToProps = dispatch => {\r\n    return { onDeposit: (m)=>dispatch({type: 'DEPOSIT', amount: m}),\r\n    onWithdraw: (m1) => dispatch({type: 'WITHDRAW', amount: m1}),\r\n    onReload: ()=>dispatch(fetchMoney())\r\n\r\n    }\r\n}\r\n\r\nconst ListMoney = connect(MapStateToProps, MapDispatchToProps)(Money);\r\n\r\nexport default ListMoney;","import React, { Component } from 'react'\r\n\r\nexport default class Person extends Component {\r\n  render() {\r\n      const {personData } = this.props;\r\n      console.log('person data :', personData);\r\n      const gender = personData.gender;\r\n      const name = personData.name.first + ' ' + personData.name.last;\r\n    //   const pic = personalData.picture.thumbnail;\r\n         const pic = personData.picture.thumbnail;\r\n    return (\r\n      <div>\r\n      <img src={pic} />           name : {name}  {' '}\r\n          gender: {gender} \r\n          \r\n    \r\n\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Person from './Person';\r\n\r\nexport default class ListPeople extends Component {\r\n  componentDidMount(){\r\n      this.props.onReload();\r\n  }\r\n    render() {\r\n    //   const allPeople  = this.props.people.people;\r\n      console.log('inside People',this.props);\r\n      const {isLoading, onReload, people, page} = this.props;\r\n      //const fu = onReload(page);\r\n      const listitems = people.map((item, index)=>(\r\n          <li key={index}> <Person personData={item}  /></li>\r\n      ));\r\n      let data = <div> List data ne:\r\n      <ul>\r\n          {listitems}\r\n      </ul>\r\n      </div>;\r\n\r\n      \r\n      if (isLoading) \r\n      data  = <div> List data ne:\r\n      <ul>\r\n          {listitems}\r\n      </ul>\r\n      <div>Loading</div>\r\n      </div>;\r\n    else\r\n    data  = <div> List data ne:\r\n    <ul>\r\n        {listitems}\r\n    </ul>\r\n    <button onClick={()=>onReload(page)}>reload data here</button>\r\n    </div>;\r\n    \r\n    return data;\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport ListPeople from '../components/ListPeople';\r\nimport { fetchPeople } from '../actions';\r\n\r\nconst MapStateToProps = (state) => ({\r\n  people: state.people.people,\r\n  isLoading: state.people.isLoading,\r\n  page: state.people.page,\r\n\r\n})\r\n\r\nconst MapDispatchToProps = dispatch => {\r\n    return { \r\n    \r\n    onReload: (page)=>dispatch(fetchPeople(page)),\r\n\r\n    }\r\n}\r\n\r\n\r\nconst People = connect(MapStateToProps, MapDispatchToProps)(ListPeople);\r\n\r\nexport default People;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Money from './components/Money';\nimport Counter from './components/Counter';\nimport ListFeature from './containers/ListFeature';\nimport ListMoney from './containers/ListMoney';\nimport People from './containers/People';\nimport ListPeople from './components/ListPeople';\n\nclass App extends Component {\n\n  render() {\n    // const {value, onIncrement, onDecrement} = this.props.counter;\n    // const {amount, onDeposit, onWithdraw} = this.props.money;\n    console.log(\"step 1 inside render of App ()\",this.props);\n\n    return ( <div>\n\n    <ListFeature />\n    <ListMoney />\n    <People />\n </div>\n )\n  }\n}\n\nexport default App;\n\n\n{/* <Counter value={value} onIncrement={onIncrement} onDecrement={onDecrement}/>\n    <Money amount={amount} onDeposit={onDeposit} onWithdraw={onWithdraw} /> */}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import callToGetCounter from \"../actions\";\r\nimport Apicall from \"../utils/Apicall\";\r\nconst host = \"http://localhost:3000/data\";\r\n\r\nconst counter = (state = { value: 0, isLoading: false }, action) => {\r\n  console.log('inside reducer', action);\r\n  \r\n  switch (action.type) {\r\n    case \"INCREMENT\": {\r\n      //const res = Apicall.postData(host,{counter: state+1});\r\n      return { ...state, value: state.value + 1 };\r\n    }\r\n    case \"SET_COUNTER\":\r\n      return { ...state, value: action.value };\r\n    case \"REQUEST_COUNTER\": {\r\n      console.log(\"are you here\");\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case \"RECEIVE_COUNTER\": {\r\n      return {value: action.value, isLoading: false } ;\r\n    }\r\n    case \"DECREMENT\": {\r\n      //const res = Apicall.putData(host,{counter: state-1});\r\n      return {...state, value: state.value-1};\r\n    }\r\n    default:\r\n    {\r\n      console.log(\"in default state\", state);\r\n      return state;\r\n    }\r\n      \r\n  }\r\n};\r\nexport default counter;\r\n","import Apicall from \"../utils/Apicall\";\r\n\r\nconst host = 'http://localhost:3000/data';\r\n\r\n\r\nconst money = (state ={amount: 0, isLoading: false}, action) => {\r\n  switch (action.type) {\r\n    case \"REQUEST_MONEY\":\r\n    {\r\n      return {...state, isLoading: true};\r\n    }\r\n    case \"DEPOSIT\":{\r\n      console.log('inside deposit', state);\r\n      //const res = Apicall.putData(host, {money: state + (Number(action.amount) === 0 ? 1 : Number(action.amount)) });\r\n      //return state + (Number(action.amount) === 0 ? 1 : Number(action.amount));\r\n      return {...state, amount: (Number(state.amount) + Number(action.amount))}\r\n      //return {...state, amount: 100}\r\n    }\r\n      \r\n    case \"WITHDRAW\":{\r\n      //const res = Apicall.putData(host, {money: state - action.amount});\r\n      //return state - action.amount;\r\n      return {...state, amount: state.amount - action.amount}\r\n    }\r\n    case \"RECEIVE_MONEY\":\r\n    {\r\n      return {...state, amount: action.amount}\r\n    }  \r\n    default: {\r\n      // console.log('in defaut of money', action);\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default money;\r\n","const people = (state = {people: [], isLoading: false, page: 1}, action ) =>{\r\n    console.log('inside reducer of people - state', state);\r\n    console.log('inside reducer of people - action', action);\r\n    switch (action.type){\r\n        case \"REQUEST_PEOPLE\":\r\n        {\r\n            console.log('request to increase page',state);\r\n            return{ ...state, isLoading: true, \r\n\r\n            }\r\n        }\r\n        \r\n        case \"RECEIVE_PEOPLE\":\r\n        return {...state, people : state.people.concat(action.people), isLoading: false, page: state.page +1\r\n\r\n        }\r\n         default:\r\n        return state;\r\n\r\n    }\r\n}\r\nexport default people;","import counter from './counter';\r\nimport money from './money';\r\nimport people from './people';\r\nimport { combineReducers } from 'redux';\r\nexport default combineReducers({counter: counter, money: money, people: people});\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport RootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport { render } from 'react-dom';\nimport { createLogger } from 'redux-logger';\n\n\n\n\nconsole.log(RootReducer);\nconst middleware = [ thunk ];\nmiddleware.push(createLogger());\nconst store = createStore(RootReducer, applyMiddleware(...middleware));\n\nconst host = 'http://localhost:3000';\n\nconst fetchCounter = () =>{\n    return fetch(host + '/data')\n.then(response=> response.json())\n.then(data => store.dispatch({type:'SET_COUNTER', value: data.counter }))\n.catch(error => {console.log(error)});\n}\nconst fetchMoney = () =>{\n    return fetch(host + '/data')\n.then(response=> response.json())\n.then(data => store.dispatch({type:'SET_MONEY', amount: data.money }))\n.catch(error => {console.log(error)});\n}\n//fetchCounter();\n//fetchMoney();\n\n//const fetchx = () => {fetchCounter(); fetchMoney();}\n\n\nrender( \n    <Provider store = {store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n// console.log(store.dispatch({type: 'DECREMENT'}));\n// console.log(store);\n// const render = ()=> {\n//  const stx = store.getState();\n//  console.log('in start', stx);\n// const onDeposit = (m)=> store.dispatch({type: 'DEPOSIT', amount: m});\n// const onWithdraw = (m1)=> store.dispatch({type: 'WITHDRAW', amount: m1});\n// const onIncrement = ()=> store.dispatch({type: 'INCREMENT'});\n// const onDecrement = ()=> store.dispatch({type: 'DECREMENT'});\n\n//     ReactDOM.render(<App counter={{value: stx.counter, onIncrement: onIncrement, onDecrement: onDecrement}} \n//         money={{amount:stx.money, onDeposit: onDeposit, onWithdraw: onWithdraw}}\n// />, document.getElementById('root'));\n\n//  } \n// render();\n// store.subscribe(render);\n//store.dispatch({type: 'DEPOSIT', amount: 100});\n\n// console.log('after everything',store.getState());\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}